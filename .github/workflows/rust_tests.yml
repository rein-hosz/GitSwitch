name: Rust Tests

on:
  push:
    branches: ["main"]
    paths:
      - "src/**"
      - "tests/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".github/workflows/**" # Trigger on workflow changes as well
  pull_request:
    branches: ["main"]
    paths:
      - "src/**"
      - "tests/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".github/workflows/**"

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Ensure ssh-keygen is available (Windows)
        if: runner.os == 'Windows'
        run: |
          # Git for Windows includes ssh-keygen. Ensure its directory is in PATH.
          # The default location is "C:\Program Files\Git\usr\bin"
          echo "C:\Program Files\Git\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          # Verify ssh-keygen is found and operational by trying a harmless command.
          # For OpenSSH, ssh-keygen -l -f NUL (on Windows) or ssh-keygen -l -f /dev/null (on Linux-like systems)
          # attempts to read a key from a null device and should return a specific error or success if the program runs.
          ssh-keygen -l -f NUL
        shell: pwsh

      - name: Run tests
        run: cargo test --verbose
