name: Rust Tests

on:
  push:
    branches: ["main"]
    paths:
      - "src/**"
      - "tests/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".github/workflows/**" # Trigger on workflow changes as well
  pull_request:
    branches: ["main"]
    paths:
      - "src/**"
      - "tests/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".github/workflows/**"

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Ensure ssh-keygen is available (Windows)
        if: runner.os == 'Windows'
        run: |
          $gitUsrBin = "C:\Program Files\Git\usr\bin"
          if (Test-Path $gitUsrBin) {
            echo $gitUsrBin | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
            Write-Host "Added $gitUsrBin to PATH"
          } else {
            Write-Warning "Default Git for Windows path $gitUsrBin not found. ssh-keygen might not be available if not already in PATH."
          }

          $sshKeygenCmd = Get-Command ssh-keygen -ErrorAction SilentlyContinue
          if ($null -ne $sshKeygenCmd) {
            Write-Host "ssh-keygen found at: $($sshKeygenCmd.Source)"
          } else {
            Write-Error "ssh-keygen not found in PATH. Please ensure Git for Windows is installed and its usr/bin directory is in PATH, or that OpenSSH is available via System32."
            exit 1
          }
        shell: pwsh

      - name: Run tests
        run: cargo test --verbose
